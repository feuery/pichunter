on:
  push:
    branches: [master]


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: pichunter
  
jobs:
  test:
    name: "Run pichunter tests"
    runs-on: 'ubuntu-latest'
    env:
      LISP: sbcl-bin
    steps:
      - uses: actions/checkout@v2
        name: Checkout code

      - name: Fetch codeset files and quicklisp
        run: |
          mkdir -p config
          curl -o config/maakunnat_kunnat.csv "https://www2.tilastokeskus.fi/fi/luokitukset/corrmaps/export/kunta_1_20160101%23maakunta_1_20160101/"
          curl -o config/counties.json "https://data.stat.fi/api/classifications/v2/classifications/maakunta_1_20230101/classificationItems?content=data&meta=max&lang=fi&format=json" 
          echo '(:mml-api-key "INVALID API KEY")' > config/config.lisp
          curl https://beta.quicklisp.org/quicklisp.lisp -o ./quicklisp.lisp

      - name: Start the database
        run: |
          docker-compose up -d

      - name: Setup and run tests
        uses: addnab/docker-run-action@v3
        with:
          image: fukamachi/sbcl:latest
          options: -v ${{ github.workspace }}:/workspace -v ${{ github.workspace }}/config:/etc/pichunter -e PICHUNTER_DB_HOST=db --network pichunter_pichunter_test_network
          run: |
            cd /workspace

            sbcl --load ./quicklisp.lisp --load ./install_ql.lisp

            current_dir=$(pwd)
            cd $HOME
          
            mkdir ~/common-lisp
            cd ~/common-lisp
            ln -s $current_dir
            cd /workspace
            sbcl --load run_tests.lisp

  build:
    name: Build pichunter docker image
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
        name: checkout code

      - name: Install tools
        run: sudo apt-get install npm uglifyjs -q -y

      - name: Install elm
        run: npm install -g elm

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u '+%Y%m')" >> $GITHUB_OUTPUT
        shell: bash        
          
      - name: Build pichunter
        run: |
          cd frontend
          elm make src/Main.elm --output pichunter.js
          uglifyjs pichunter.js --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters,keep_fargs=false,unsafe_comps,unsafe' | uglifyjs --mangle > pichunter.min.js
          cd ..
          mv frontend/pichunter.min.js .
          mv frontend/site.css .
          mv frontend/pichunter-helper.js .
          ls -la

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/feuery/pichunter:latest
            ghcr.io/feuery/pichunter:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

  test-playwright:
    name: Runs playwright browserr tests
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v2
        name: Checkout code
        
      - name: Fetch codeset files and quicklisp
        run: |
          mkdir -p config
          curl -o config/maakunnat_kunnat.csv "https://www2.tilastokeskus.fi/fi/luokitukset/corrmaps/export/kunta_1_20160101%23maakunta_1_20160101/"
          curl -o config/counties.json "https://data.stat.fi/api/classifications/v2/classifications/maakunta_1_20230101/classificationItems?content=data&meta=max&lang=fi&format=json" 
          echo '(:mml-api-key "INVALID API KEY")' > config/config.lisp
          # curl https://beta.quicklisp.org/quicklisp.lisp -o ./quicklisp.lisp

      - name: Start the database
        run: |
          docker-compose up -d
          
      - name: Start pichunter
        id: tests
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/feuery/pichunter:latest
          options: -v ${{ github.workspace }}:/workspace -v ${{ github.workspace }}/config:/etc/pichunter -e PICHUNTER_DB_HOST=db -e PICHUNTER_E2E=e2e -p 3000:3000 --network pichunter_pichunter_test_network
          run: |
            set -eux

            ./pichunter_server&
            
            cd /workspace
            
            apt-get -qq install curl npm 
            npm install -g n
            n lts

            hash -r
            npm install -g npm
            
            cd playwright-tests
            npm ci
            npx playwright install --with-deps
            npx playwright test --reporter=line
            find . -name '*.webm'

      - uses: actions/upload-artifact@v3
        if: always() && steps.tests.outcome == 'failure'
        with:
          name: playwright-report
          path: ${{ github.workspace }}/playwright-tests/test-results
          if-no-files-found: error
          retention-days: 30          
